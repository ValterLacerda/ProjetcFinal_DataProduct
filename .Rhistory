source("C:\\Users\\sqj1581\\Desktop\\TETRIS\\func_tratamentos.R")
baseGrupo$alvo2 = factor(baseGrupo$alvo2)
inTrain <- createDataPartition(baseGrupo$alvo2, p = 0.7, list = FALSE)
treina <- baseGrupo[inTrain,]
valida <- baseGrupo[-inTrain,]
str(treina)
names(treina)
plot(treina$alvo,type="b", xlab="Resposta",
ylab="Qtde de registros")
library(car)
modVIF <- lm(as.numeric(alvo2) ~ ., data = treina[,-c(1:2)])
vif(modVIF)
library(RODBC)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM [VIAVAREJO_ALVO_TEXTO_FINAL]"
baseGrupo <- sqlQuery(myConn, strSQL)
library(caret)
source("C:\\Users\\sqj1581\\Desktop\\TETRIS\\func_tratamentos.R")
baseGrupo$alvo2 = factor(baseGrupo$alvo2)
inTrain <- createDataPartition(baseGrupo$alvo2, p = 0.7, list = FALSE)
treina <- baseGrupo[inTrain,]
valida <- baseGrupo[-inTrain,]
str(treina)
names(treina)
plot(treina$alvo,type="b", xlab="Resposta",
ylab="Qtde de registros")
library(RODBC)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM [VIAVAREJO_ALVO_TEXTO_FINAL]"
baseGrupo <- sqlQuery(myConn, strSQL)
library(caret)
source("C:\\Users\\sqj1581\\Desktop\\TETRIS\\func_tratamentos.R")
baseGrupo$alvo2 = factor(baseGrupo$alvo2)
inTrain <- createDataPartition(baseGrupo$alvo2, p = 0.7, list = FALSE)
treina <- baseGrupo[inTrain,]
valida <- baseGrupo[-inTrain,]
str(treina)
names(treina)
library(car)
modVIF <- lm(as.numeric(alvo2) ~ ., data = treina[,-c(1:2)])
vif(modVIF)
head(treina[,-1])
modFit <- step(glm(alvo2 ~ ., data = treina[,-1], family="binomial"),
trace = 0)
summary(modFit)
calcKS(modFit, "alvo2", valida)
cor(modVIF, y = NULL, use = "everything",
method = c("pearson", "kendall", "spearman"))
cor(treina, y = NULL, use = "everything",
method = c("pearson", "kendall", "spearman"))
retcor <- cor(treina, y = NULL, use = "everything",
method = c("pearson", "kendall", "spearman"))
retcor <- cor(treina(3:14), y = NULL, use = "everything",
method = c("pearson", "kendall", "spearman"))
retcor <- cor(treina[3:14], y = NULL, use = "everything",
method = c("pearson", "kendall", "spearman"))
retcor
write.csv2(retcor, file = "\\spobrmodm01\00 - DADOS NÃO ESTRUTURADOS\00 - PROJETOS\124 - VIA VAREJO - TEXT ANALYTICS\02 - PROCESSAMENTO\CORR.csv")
write.csv2(retcor, file = "\\spobrmodm01\\00 - DADOS NÃO ESTRUTURADOS\\00 - PROJETOS\\124 - VIA VAREJO - TEXT ANALYTICS\\02 - PROCESSAMENTO\\CORR.csv")
write.csv(retcor, file = "\\spobrmodm01\\00 - DADOS NÃO ESTRUTURADOS\\00 - PROJETOS\\124 - VIA VAREJO - TEXT ANALYTICS\\02 - PROCESSAMENTO\\CORR.csv")
write.csv(retcor, file = "C:\\Users\\sqj1581\\Desktop\\Nova pasta\\CORR.csv")
summary(modFit)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM [VIAVAREJO_ALVO_TEXTO_FINAL]"
baseGrupo <- sqlQuery(myConn, strSQL)
library(caret)
source("C:\\Users\\sqj1581\\Desktop\\TETRIS\\func_tratamentos.R")
baseGrupo$alvo2 = factor(baseGrupo$alvo2)
inTrain <- createDataPartition(baseGrupo$alvo2, p = 0.7, list = FALSE)
treina <- baseGrupo[inTrain,]
valida <- baseGrupo[-inTrain,]
str(treina)
names(treina)
head(treina[,-1])
modFit <- step(glm(alvo2 ~ ., data = treina[,-1], family="binomial"),
trace = 0)
summary(modFit)
calcKS(modFit, "alvo2", valida)
predValida <- predict(modFit, valida, type="response")
predClasses <- cut2(predValida, g = 20)
tabela <- data.frame(cbind(table(predClasses, valida$FRAUDE)))
tabela <- data.frame(cbind(table(predClasses, valida$alvo2)))
tabela$X2 <- round(tabela$X1 / (tabela$X0 + tabela$X1),4)
names(tabela) <- c("BOM","MAU","Taxa")
tabela$Lift <- round(tabela$Taxa / (sum(baseOk$alvo2)/dim(baseOk)[1]),2)
tabela
predValida <- predict(modFit, valida, type="response")
predClasses <- cut2(predValida, g = 10)
tabela <- data.frame(cbind(table(predClasses, valida$alvo2)))
tabela$X2 <- round(tabela$X1 / (tabela$X0 + tabela$X1),4)
names(tabela) <- c("BOM","MAU","Taxa")
tabela
predValida <- predict(modFit, valida, type="response")
predClasses <- cut2(predValida, g = 20)
tabela <- data.frame(cbind(table(predClasses, valida$alvo2)))
tabela$X2 <- round(tabela$X1 / (tabela$X0 + tabela$X1),4)
names(tabela) <- c("BOM","MAU","Taxa")
tabela
write.csv(tabela, file = "C:\\Users\\sqj1581\\Desktop\\Nova pasta\\tabela.csv")
calcKS(modFit, "alvo2", valida)
findFreqTerms(myCorpusFULL, lowfreq=1000)
dtm <- DocumentTermMatrix(myCorpusFULL)
dtm
class(dtm)
dim(dtm)
tdm <- TermDocumentMatrix(myCorpusFULL)
tdm
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
freq[head(ord)]
freq[tail(ord)]
head(table(freq), 15)
tail(table(freq), 15)
dim(dtm)
dtms <- removeSparseTerms(dtm, 0.1)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.05)
dim(dtms)
inspect(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
dtms <- dtm
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
dtms <- dtmremoveSparseTerms(dtm, 5)
dtms <- removeSparseTerms(dtm, 5)
dim(dtms)
dtms <- removeSparseTerms(dtm, 1)
dtms <- removeSparseTerms(dtm, 0.01)
dim(dtms)
dtms <- dtm
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
table(freq)
findFreqTerms(dtm, lowfreq=1000)
findFreqTerms(dtm, lowfreq=100)
findFreqTerms(dtm, lowfreq=100)
findAssocs(dtm, "data", corlimit=0.2)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
library(Rgraphviz)
install.packages("Rgraphviz")
source("http://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
par(mfrow=c(1,1))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
par(mfrow=c(1,2))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
par(mfrow=c(2,1))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
par(mfrow=c(1,1))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
png(filename="corr_plot_ALL.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),
corThreshold=0.2)
dev.off()
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO2 = 1"
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO2 = 1"
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO2 = 1"
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
myCorpusFULL <- Corpus(VectorSource(base_full&TEXTO))
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
heade(base_full)
head(base_full)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE alvo2 = 1"
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
head(base_full)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL"
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
head(base_full)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINA WHERE ALVO2 = 1 "
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINA WHERE ALVO = 1 "
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
head(base_full)
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO = 1 "
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
head(base_full)
myCorpusFULL <- tm_map(myCorpusFULL, removeNumbers)
myCorpusFULL <- tm_map(myCorpusFULL, removePunctuation)
myCorpusFULL <- tm_map(myCorpusFULL, removeWords, stopwords("portuguese"))
myCorpusFULL <- tm_map(myCorpusFULL, stripWhitespace)
library(SnowballC)
myCorpusFULL <- tm_map(myCorpusFULL, stemDocument)
inspect(myCorpusFULL[1])
dtm <- DocumentTermMatrix(myCorpusFULL)
class(dtm)
dim(dtm)
tdm <- TermDocumentMatrix(myCorpusFULL)
tdm
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
freq[head(ord)]
freq[tail(ord)]
head(table(freq), 15)
tail(table(freq), 15)
dim(dtm)
dtms <- dtm removeSparseTerms(dtm, 0.01)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.01)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.9)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.8)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.95)
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
table(freq)
findFreqTerms(dtm, lowfreq=1000)
findFreqTerms(dtm, lowfreq=100)
findAssocs(dtm, "data", corlimit=0.2)
par(mfrow=c(1,1))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
png(filename="corr_plot_MAU.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_MAU.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/10),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_MAU.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/30),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_MAU.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/30),
corThreshold=0.2)
dev.off()
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO = 0 "
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
head(base_full)
myCorpusFULL <- tm_map(myCorpusFULL, removeNumbers)
myCorpusFULL <- tm_map(myCorpusFULL, removePunctuation)
myCorpusFULL <- tm_map(myCorpusFULL, removeWords, stopwords("portuguese"))
myCorpusFULL <- tm_map(myCorpusFULL, stripWhitespace)
myCorpusFULL <- tm_map(myCorpusFULL, stemDocument)
inspect(myCorpusFULL[1])
dtm <- DocumentTermMatrix(myCorpusFULL)
class(dtm)
dim(dtm)
tdm <- TermDocumentMatrix(myCorpusFULL)
tdm
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
freq[head(ord)]
freq[tail(ord)]
head(table(freq), 15)
tail(table(freq), 15)
dim(dtm)
dtms <- removeSparseTerms(dtm, 0.1)
dim(dtms)
dtms <- removeSparseTerms(dtm, 0.8)
dim(dtms)
dtms <- dtm
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
dtms <- dtm removeSparseTerms(dtm, 0.3)
dtms <- removeSparseTerms(dtm, 0.3)
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
table(freq)
findFreqTerms(dtm, lowfreq=1000)
findFreqTerms(dtm, lowfreq=100)
findAssocs(dtm, "data", corlimit=0.2)
par(mfrow=c(1,1))
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.2)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100),
corThreshold=0.2)
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100),
corThreshold=0.2)
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),
corThreshold=0.2)
dev.off()
par(mfrow=c(1,1))
library(Rgraphviz)
par(mfrow=c(1,1))
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),
corThreshold=0.2)
dev.off()
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
dtms <- dtm
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
table(freq)
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
```{r, warning=FALSE, message=FALSE, fig.height = 7}
myConn <- odbcConnect("PROJANALYTICS")
strSQL <- "SELECT * FROM VIAVAREJO_RET_TEXTO2_FINAL WHERE ALVO = 0 "
base_full <- sqlQuery(myConn, strSQL)
myCorpusFULL <- Corpus(VectorSource(base_full$TEXTO))
```
head(base_full)
Busco a base full para tratamentos e avaliação de associação entre os documentos no texto
```{r, warning=FALSE, message=FALSE, fig.height = 7}
myCorpusFULL <- tm_map(myCorpusFULL, removeNumbers)
```
Limpo todos os caracteres numericos do texto
```{r, warning=FALSE, message=FALSE, fig.height = 7}
myCorpusFULL <- tm_map(myCorpusFULL, removePunctuation)
```
Limpo todos as pontuações
```{r, warning=FALSE, message=FALSE, fig.height = 7}
myCorpusFULL <- tm_map(myCorpusFULL, removeWords, stopwords("portuguese"))
```
Retiro as stopwords do texto
```{r, warning=FALSE, message=FALSE, fig.height = 7}
myCorpusFULL <- tm_map(myCorpusFULL, stripWhitespace)
```
Retiro os espaços nao necessários no texto
```{r, warning=FALSE, message=FALSE, fig.height = 7}
library(SnowballC)
myCorpusFULL <- tm_map(myCorpusFULL, stemDocument)
inspect(myCorpusFULL[1])
```
Carregar SnowballC (Bouchet-Valat, 2014) package com recursos de stemming.
---Incluir tratamento stemming
Creating a Document Term Matrix
dtm <- DocumentTermMatrix(myCorpusFULL)
class(dtm)
dim(dtm)
tdm <- TermDocumentMatrix(myCorpusFULL)
tdm
Exploring the Document Term Matrix
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
# Least frequent terms
freq[head(ord)]
#Most freq Terms
freq[tail(ord)]
Distribution of Term Frequencies
# Frequency of frequencies.
head(table(freq), 15)
tail(table(freq), 15)
Removing Sparse Terms
dim(dtm)
dtms <- dtm removeSparseTerms(dtm, 0.3)
dim(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtms))
freq
table(freq)
findFreqTerms(dtm, lowfreq=1000)
findFreqTerms(dtm, lowfreq=100)
findAssocs(dtm, "data", corlimit=0.2)
install.packages("Rgraphviz")
library(Rgraphviz)
par(mfrow=c(1,1))
install.packages("Rgraphviz")
plot(dtm,
terms=findFreqTerms(dtm, lowfreq=100)[1:50],
corThreshold=0.5)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
dev.off()
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
png(filename="corr_plot_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
png(filename="corr_plota_BOM.png", width = 2500, height = 500, res = 100)
plot(dtm,terms=findFreqTerms(dtm, lowfreq=dim(dtm)[2]/20),corThreshold=0.2)
dev.off()
vif(modVIF)
summary(modFit)
export <- summary(modFit)
write.csv(export, file = "C:\\Users\\sqj1581\\Desktop\\Nova pasta\\export.csv")
export
write.csv(export, file = "C:\\Users\\sqj1581\\Desktop\\Nova pasta\\export.csv")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
summary(modFit)
export <- summary.glm(modFit)$coefficients
write.csv(export, file = "C:\\Users\\sqj1581\\Desktop\\Nova pasta\\export.csv")
diabetesRisk <- function(glucose) glucose / 200
diabetesRisk(2)
install.packages('shiny')
library(shiny)
plot(baseOk$ProducaoBibliografica > 0)
library(RODBC)
library(Hmisc)
library(pastecs)
library(psych)
library ("car")
library("caret")
source("C:\\Users\\sqj1581\\Desktop\\TETRIS\\func_tratamentos.R")
library("Hmisc")
library(aod)
library(ggplot2)
library (rpart)
library(rattle)
library (rpart.plot)
library (RColorBrewer)
library (party)
library (partykit)
library (caret)
myConn <- odbcConnect("KOL")
strSQL <- "SELECT * FROM IMS_RET_LATTES_CONTAGEM_FILTER1"
baseOk <- sqlQuery(myConn, strSQL)
plot(baseOk$ProducaoBibliografica > 0)
hist(baseOk$ProducaoBibliografica > 0)
myConn <- odbcConnect("KOL")
strSQL <- "SELECT * FROM IMS_RET_LATTES_CONTAGEM"
baseOk <- sqlQuery(myConn, strSQL)
hist(baseOk$ProducaoBibliografica > 0)
hist(baseOk$ProducaoBibliografica)
head(baseOk$ProducaoBibliografica)
head(baseOk$ProducaoBibliografica > 0)
head(baseOk[,1]>0)
head(baseOk[,c(2)]>0)
dados <- head(baseOk[,c(2)]>0)
head(dados)
hist(baseOk$ProducaoBibliografica)
myConn <- odbcConnect("KOL")
strSQL <- "SELECT * FROM IMS_RET_LATTES_CONTAGEM where ProducaoBibliografica > 0"
baseOk <- sqlQuery(myConn, strSQL)
hist(baseOk$ProducaoBibliografica)
myConn <- odbcConnect("KOL")
strSQL <- "SELECT * FROM IMS_RET_LATTES_CONTAGEM"
baseOk <- sqlQuery(myConn, strSQL)
corr(baseOk)
cor(baseOk)
head(baseOk)
cor(baseOk[,-c(1)])
correlacao <- cor(baseOk[,-c(1)])
write.table(correlacao, "c:/mydata.txt", sep="\t")
install.packages('devtools')
setwd("C:\\Users\\sqj1581\\Desktop\\DataProductCoursera-master\\")
runApp()
library(shiny)
runApp()
